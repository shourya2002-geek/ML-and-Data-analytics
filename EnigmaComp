{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"EnigmaComp","provenance":[],"authorship_tag":"ABX9TyNHSjZTWfWFFkiAA+zH+tu9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"zRjhm0f2oc6c"},"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from pandas_profiling import ProfileReport\n","from numpy import percentile\n","import xgboost\n","from xgboost import XGBRegressor\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.linear_model import LogisticRegression\n","from matplotlib import pyplot\n","from xgboost import plot_importance\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":378},"id":"qVPKmkzJpcEr","executionInfo":{"status":"ok","timestamp":1623156192133,"user_tz":-330,"elapsed":10595,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"2b71cff6-1e3a-4a26-ca2b-94b8f6d6f276"},"source":["!pip install pandas==0.25.0"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting pandas==0.25.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3b/42/dc1f4820b95fbdbc9352ec9ad0f0c40db2122e1f2440ea53c7f9fbccf2b8/pandas-0.25.0-cp37-cp37m-manylinux1_x86_64.whl (10.4MB)\n","\u001b[K     |████████████████████████████████| 10.4MB 32.6MB/s \n","\u001b[?25hRequirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas==0.25.0) (2018.9)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from pandas==0.25.0) (1.19.5)\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/dist-packages (from pandas==0.25.0) (2.8.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.6.1->pandas==0.25.0) (1.15.0)\n","\u001b[31mERROR: xarray 0.18.2 has requirement pandas>=1.0, but you'll have pandas 0.25.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement pandas~=1.1.0; python_version >= \"3.0\", but you'll have pandas 0.25.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: fbprophet 0.7.1 has requirement pandas>=1.0.4, but you'll have pandas 0.25.0 which is incompatible.\u001b[0m\n","Installing collected packages: pandas\n","  Found existing installation: pandas 1.1.5\n","    Uninstalling pandas-1.1.5:\n","      Successfully uninstalled pandas-1.1.5\n","Successfully installed pandas-0.25.0\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["pandas"]}}},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fp7-Eq7NoiCX","executionInfo":{"status":"ok","timestamp":1623194610899,"user_tz":-330,"elapsed":19095,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"1acd1d77-21dd-4f2f-872a-907d47490604"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GGvXovNGovqV"},"source":["train = pd.read_csv(\"/content/drive/MyDrive/Data/d_train_regr.csv\")\n","test = pd.read_csv(\"/content/drive/MyDrive/Data/d_test_regr.csv\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"UaDSyQxdpD6b","executionInfo":{"status":"ok","timestamp":1623156096151,"user_tz":-330,"elapsed":408,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"7bcfe77d-f86f-4fab-bf26-b9cb606b17d4"},"source":["train.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Area (km^2)</th>\n","      <th>Investigated Before</th>\n","      <th>Distance to port</th>\n","      <th>Years of Operation</th>\n","      <th>24Hr Power</th>\n","      <th>Location</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>301</td>\n","      <td>1.778</td>\n","      <td>no</td>\n","      <td>55.925992</td>\n","      <td>6</td>\n","      <td>no</td>\n","      <td>Location 3</td>\n","      <td>16.985052</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>302</td>\n","      <td>3.167</td>\n","      <td>no</td>\n","      <td>44.423006</td>\n","      <td>5</td>\n","      <td>no</td>\n","      <td>Location 4</td>\n","      <td>28.137384</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>303</td>\n","      <td>1.111</td>\n","      <td>no</td>\n","      <td>50.003000</td>\n","      <td>5</td>\n","      <td>no</td>\n","      <td>Location 2</td>\n","      <td>12.182088</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>304</td>\n","      <td>1.333</td>\n","      <td>yes</td>\n","      <td>57.593985</td>\n","      <td>5</td>\n","      <td>no</td>\n","      <td>Location 4</td>\n","      <td>14.776600</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>305</td>\n","      <td>3.444</td>\n","      <td>no</td>\n","      <td>57.460199</td>\n","      <td>5</td>\n","      <td>yes</td>\n","      <td>Location 4</td>\n","      <td>54.066352</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    id  Area (km^2) Investigated Before  ...  24Hr Power    Location     Profit\n","0  301        1.778                  no  ...          no  Location 3  16.985052\n","1  302        3.167                  no  ...          no  Location 4  28.137384\n","2  303        1.111                  no  ...          no  Location 2  12.182088\n","3  304        1.333                 yes  ...          no  Location 4  14.776600\n","4  305        3.444                  no  ...         yes  Location 4  54.066352\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"2AnAFFqVpHW8","executionInfo":{"status":"ok","timestamp":1623194617943,"user_tz":-330,"elapsed":446,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"53d75f72-b1c0-44a7-e4eb-d1063efa54bd"},"source":["df = pd.concat([test.assign(ind=\"test\"), train.assign(ind=\"train\")])\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Area (km^2)</th>\n","      <th>Investigated Before</th>\n","      <th>Distance to port</th>\n","      <th>Years of Operation</th>\n","      <th>24Hr Power</th>\n","      <th>Location</th>\n","      <th>ind</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2.611</td>\n","      <td>no</td>\n","      <td>50.959752</td>\n","      <td>6</td>\n","      <td>no</td>\n","      <td>Location 1</td>\n","      <td>test</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.722</td>\n","      <td>no</td>\n","      <td>46.048450</td>\n","      <td>7</td>\n","      <td>no</td>\n","      <td>Location 2</td>\n","      <td>test</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.444</td>\n","      <td>yes</td>\n","      <td>53.422460</td>\n","      <td>6</td>\n","      <td>no</td>\n","      <td>Location 2</td>\n","      <td>test</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2.833</td>\n","      <td>yes</td>\n","      <td>58.759690</td>\n","      <td>6</td>\n","      <td>no</td>\n","      <td>Location 1</td>\n","      <td>test</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1.722</td>\n","      <td>yes</td>\n","      <td>52.190568</td>\n","      <td>5</td>\n","      <td>no</td>\n","      <td>Location 4</td>\n","      <td>test</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  Area (km^2) Investigated Before  ...    Location   ind Profit\n","0   1        2.611                  no  ...  Location 1  test    NaN\n","1   2        1.722                  no  ...  Location 2  test    NaN\n","2   3        1.444                 yes  ...  Location 2  test    NaN\n","3   4        2.833                 yes  ...  Location 1  test    NaN\n","4   5        1.722                 yes  ...  Location 4  test    NaN\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JRHzQbWBucI2","executionInfo":{"status":"ok","timestamp":1623194621432,"user_tz":-330,"elapsed":481,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"ade0f410-de0c-4709-cabc-ac9309221b33"},"source":["track = df.iloc[:300,0]\n","track"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1        2\n","2        3\n","3        4\n","4        5\n","      ... \n","295    296\n","296    297\n","297    298\n","298    299\n","299    300\n","Name: id, Length: 300, dtype: int64"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gcq8XU5UpRuk","executionInfo":{"status":"ok","timestamp":1623156148035,"user_tz":-330,"elapsed":370,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"6ddcca6f-ce7d-4587-9935-eb6f5985e554"},"source":["arr = np.array(df['ind'])\n","for i in range(len(arr)):\n","  if arr[i]!=arr[i+1]:\n","    ix = i\n","    break\n","ix "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["299"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"AXC2mX9tpUNa"},"source":["\n","df.drop(['id','ind'],axis=1,inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EIzTTG3TuYe7"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"mCukpKnWpgU6","executionInfo":{"status":"ok","timestamp":1623156498760,"user_tz":-330,"elapsed":388,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"eeb738cb-5d37-4d05-b08c-75dc5919f24b"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>24Hr Power</th>\n","      <th>Area (km^2)</th>\n","      <th>Distance to port</th>\n","      <th>Investigated Before</th>\n","      <th>Location</th>\n","      <th>Profit</th>\n","      <th>Years of Operation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>no</td>\n","      <td>2.611</td>\n","      <td>50.959752</td>\n","      <td>no</td>\n","      <td>Location 1</td>\n","      <td>NaN</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>no</td>\n","      <td>1.722</td>\n","      <td>46.048450</td>\n","      <td>no</td>\n","      <td>Location 2</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>no</td>\n","      <td>1.444</td>\n","      <td>53.422460</td>\n","      <td>yes</td>\n","      <td>Location 2</td>\n","      <td>NaN</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>no</td>\n","      <td>2.833</td>\n","      <td>58.759690</td>\n","      <td>yes</td>\n","      <td>Location 1</td>\n","      <td>NaN</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>no</td>\n","      <td>1.722</td>\n","      <td>52.190568</td>\n","      <td>yes</td>\n","      <td>Location 4</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  24Hr Power  Area (km^2)  ...  Profit Years of Operation\n","0         no        2.611  ...     NaN                  6\n","1         no        1.722  ...     NaN                  7\n","2         no        1.444  ...     NaN                  6\n","3         no        2.833  ...     NaN                  6\n","4         no        1.722  ...     NaN                  5\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"5TJZKy2LqZP2"},"source":["Y = df['Profit']\n","X = df.drop(['Profit'],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"qwJ2-Nnoq5rq","executionInfo":{"status":"ok","timestamp":1623156585722,"user_tz":-330,"elapsed":554,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"7b4adbb8-7a45-4016-f724-9f01e53f5991"},"source":["X.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>24Hr Power</th>\n","      <th>Area (km^2)</th>\n","      <th>Distance to port</th>\n","      <th>Investigated Before</th>\n","      <th>Location</th>\n","      <th>Years of Operation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>no</td>\n","      <td>2.611</td>\n","      <td>50.959752</td>\n","      <td>no</td>\n","      <td>Location 1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>no</td>\n","      <td>1.722</td>\n","      <td>46.048450</td>\n","      <td>no</td>\n","      <td>Location 2</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>no</td>\n","      <td>1.444</td>\n","      <td>53.422460</td>\n","      <td>yes</td>\n","      <td>Location 2</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>no</td>\n","      <td>2.833</td>\n","      <td>58.759690</td>\n","      <td>yes</td>\n","      <td>Location 1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>no</td>\n","      <td>1.722</td>\n","      <td>52.190568</td>\n","      <td>yes</td>\n","      <td>Location 4</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  24Hr Power  Area (km^2)  ...    Location Years of Operation\n","0         no        2.611  ...  Location 1                  6\n","1         no        1.722  ...  Location 2                  7\n","2         no        1.444  ...  Location 2                  6\n","3         no        2.833  ...  Location 1                  6\n","4         no        1.722  ...  Location 4                  5\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"GvG6Khw9h4xD"},"source":["X_new = X.drop(['24Hr Power','Investigated Before','Location'],axis=1)\n","X = pd.get_dummies(X)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"id":"El99K7LDrDRx","executionInfo":{"status":"ok","timestamp":1623157185232,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"1d43dc6d-2277-4ae1-aa39-a64adae58c75"},"source":["X.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Area (km^2)</th>\n","      <th>Distance to port</th>\n","      <th>Years of Operation</th>\n","      <th>24Hr Power_no</th>\n","      <th>24Hr Power_yes</th>\n","      <th>Investigated Before_no</th>\n","      <th>Investigated Before_yes</th>\n","      <th>Location_Location 1</th>\n","      <th>Location_Location 2</th>\n","      <th>Location_Location 3</th>\n","      <th>Location_Location 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.611</td>\n","      <td>50.959752</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.722</td>\n","      <td>46.048450</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.444</td>\n","      <td>53.422460</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.833</td>\n","      <td>58.759690</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.722</td>\n","      <td>52.190568</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Area (km^2)  Distance to port  ...  Location_Location 3  Location_Location 4\n","0        2.611         50.959752  ...                    0                    0\n","1        1.722         46.048450  ...                    0                    0\n","2        1.444         53.422460  ...                    0                    0\n","3        2.833         58.759690  ...                    0                    0\n","4        1.722         52.190568  ...                    0                    1\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fhc_GDctrD5P","executionInfo":{"status":"ok","timestamp":1623194641586,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"f2b648df-302f-4368-eb55-e169c06a6ac2"},"source":["X_train = X.iloc[300:,:]\n","X_test = X.iloc[:300,:]\n","X_test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(300, 11)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xe7DAyqarXCS","executionInfo":{"status":"ok","timestamp":1623194643135,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"48c51d2a-be7a-4bc5-c769-ddacf27fe945"},"source":["Y = pd.DataFrame(Y)\n","Y_train = Y.iloc[300:,:]\n","Y_test = Y.iloc[:300,:]\n","Y_test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(300, 1)"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pqhrkf-ttVlr","executionInfo":{"status":"ok","timestamp":1623194992083,"user_tz":-330,"elapsed":528,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"2a8844b1-5a57-43a8-d4d5-657f933bceab"},"source":["\n","xgb = XGBRegressor(max_depth=5)\n","xgb.fit(X_train,Y_train)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[23:29:51] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n","             colsample_bynode=1, colsample_bytree=1, gamma=0,\n","             importance_type='gain', learning_rate=0.1, max_delta_step=0,\n","             max_depth=5, min_child_weight=1, missing=None, n_estimators=100,\n","             n_jobs=1, nthread=None, objective='reg:linear', random_state=0,\n","             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n","             silent=None, subsample=1, verbosity=1)"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"jettbz5Ei7vk","executionInfo":{"status":"ok","timestamp":1623171314497,"user_tz":-330,"elapsed":522,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"45b85e9d-2cec-4069-c75e-17d75bd5e1c3"},"source":["plot_importance(xgb)\n","pyplot.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"AFe4tSUDtW5p"},"source":["Y_pred = xgb.predict(X_test)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"T9Hca68Bt5Fh","executionInfo":{"status":"ok","timestamp":1623194997187,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"950cf0d4-a307-403a-c095-04678d185644"},"source":["Y_pred = pd.DataFrame(Y_pred)\n","Y_pred.head(-10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25.501747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>19.387594</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16.199615</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27.067846</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.351374</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>36.939140</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>26.864670</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>27.460718</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>54.366447</td>\n","    </tr>\n","    <tr>\n","      <th>289</th>\n","      <td>27.330420</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>290 rows × 1 columns</p>\n","</div>"],"text/plain":["             0\n","0    25.501747\n","1    19.387594\n","2    16.199615\n","3    27.067846\n","4    17.351374\n","..         ...\n","285  36.939140\n","286  26.864670\n","287  27.460718\n","288  54.366447\n","289  27.330420\n","\n","[290 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"o8Z0kpTzuGU4"},"source":["Y_pred = pd.concat([track,Y_pred],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"AD4FRXMmuSoB","executionInfo":{"status":"ok","timestamp":1623195000894,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"242e9174-5883-4f65-bffa-c286de7bba2d"},"source":["Y_pred.columns = ['id','Profit']\n","Y_pred.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>25.501747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>19.387594</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>16.199615</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>27.067846</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>17.351374</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id     Profit\n","0   1  25.501747\n","1   2  19.387594\n","2   3  16.199615\n","3   4  27.067846\n","4   5  17.351374"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"NjVaTZzxuUPr"},"source":["Y_pred.to_csv('Y9.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YIaPAx_quyVZ","colab":{"base_uri":"https://localhost:8080/","height":258},"executionInfo":{"status":"ok","timestamp":1623194853136,"user_tz":-330,"elapsed":518,"user":{"displayName":"Shourya Gupta","photoUrl":"","userId":"09141924503714917634"}},"outputId":"0430630c-bfb9-4c8f-aaeb-c89f1c77dace"},"source":["rf = RandomForestRegressor()\n","rf.fit(X_train,Y_train)\n","Y_pred1 = rf.predict(X_test)\n","Y_pred1 = pd.DataFrame(Y_pred1)\n","Y_pred1 = pd.concat([track,Y_pred1],axis=1)\n","Y_pred1.columns = ['id','Profit']\n","Y_pred1.head()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>24.370905</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>19.116220</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>15.379160</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>26.690691</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>17.572486</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id     Profit\n","0   1  24.370905\n","1   2  19.116220\n","2   3  15.379160\n","3   4  26.690691\n","4   5  17.572486"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"Ti1XnUbc8Y0f"},"source":["Y_pred1.to_csv('Y7.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HDzzLR018rOg"},"source":[""],"execution_count":null,"outputs":[]}]}